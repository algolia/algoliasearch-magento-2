version: 2.1

orbs:
  php: circleci/php@2.0.0

executors:
  magento-executor:
    machine:
      image: ubuntu-2404:2024.11.1
      docker_layer_caching: true

jobs:
  magento-build:
    executor:
      name: magento-executor
    parameters:
      php-version:
        type: string
      magento-version:
        type: string
    steps:
      - checkout
      - php/install_php:
          version: << parameters.php-version >>
      - php/install_composer
      - run:
          name: Configure composer authentication
          command: |
            composer config --global http-basic.repo.magento.com ${MAGENTO_AUTH_USERNAME} ${MAGENTO_AUTH_PASSWORD}
            composer config --global repositories.algolia vcs https://github.com/algolia/algoliasearch-magento-2
      - run:
          name: Setup folder structure and override file
          command: |
            mkdir ~/Sites
            mkdir ~/Sites/unit-tests
            mkdir ~/Sites/unit-coverage
            cd ~/Sites
            cat \<<EOF > compose.override.yml
            services:
              phpfpm:
                image: markoshust/magento-php:<< parameters.php-version >>-fpm
            EOF
      - run:
          name: Setup magento enterprise
          working_directory: ~/Sites
          command: |
            curl -s https://raw.githubusercontent.com/markshust/docker-magento/master/lib/template | bash
            docker compose -f compose.yaml -f compose.override.yml up -d --remove-orphans
            bin/cli rm -rf composer.lock vendor composer.json
            bin/fixowns
            bin/setup-composer-auth
            bin/cli git clone git@github.com:magento/magento2.git .
            bin/cli git checkout tags/<< parameters.magento-version >>
            bin/composer require "algolia/algoliasearch-magento-2:dev-${CIRCLE_BRANCH}"
            bin/composer global require --dev phpunit/phpunit
      - run:
          name: Enable AlgoliaSearch extension
          working_directory: ~/Sites
          command: |
            bin/magento module:enable Algolia_AlgoliaSearch
      - run:
          name: Compile AlgoliaSearch extension
          working_directory: ~/Sites
          command: |
            bin/magento setup:di:compile
            bin/magento module:status Algolia_AlgoliaSearch
      - run:
          name: Run Unit Tests and copy results to CircleCI
          working_directory: ~/Sites
          command: |
            bin/cli sed -i '/<extensions>/,/<\/extensions>/d' /var/www/html/dev/tests/unit/phpunit.xml.dist
            bin/cli vendor/bin/phpunit -c /var/www/html/dev/tests/unit/phpunit.xml.dist --log-junit /var/www/html/dev/tests/unit/report/junit.xml /var/www/html/vendor/algolia/algoliasearch-magento-2/Test/Unit
            docker cp $(docker compose ps -q phpfpm):/var/www/html/dev/tests/unit/report/junit.xml ./unit-tests/
      - store_test_results:
          path: ~/Sites/unit-tests
      - run:
          name: Run Unit Test Coverage and copy results to CircleCI
          working_directory: ~/Sites
          command: |
            bin/cli php -d xdebug.mode=coverage vendor/bin/phpunit -c /var/www/html/dev/tests/unit/phpunit.xml.dist --log-junit /var/www/html/dev/tests/unit/report/junit.xml --coverage-html /var/www/html/dev/tests/unit/report --coverage-filter /var/www/html/vendor/algolia/algoliasearch-magento-2/ /var/www/html/vendor/algolia/algoliasearch-magento-2/Test/Unit
            docker cp $(docker compose ps -q phpfpm):/var/www/html/dev/tests/unit/report ./unit-coverage/
      - store_artifacts:
          path: ~/Sites/unit-coverage/report
          destination: test-results/magento-<< parameters.magento-version >>-php-<< parameters.php-version >>

workflows:
  magento-build-and-test-workflow:
    jobs:
      - magento-build:
          matrix:
            parameters:
              php-version: ["8.2"]
              magento-version: ["2.4.6-p11", "2.4.7-p6"]
