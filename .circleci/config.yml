version: 2

shared: &shared
    working_directory: ~/build_directory/algoliasearch-magento-2
    steps:
        - checkout

        - run:
            name: Override the Algolia extension with the cloned one
            command: |
                cd ~/magento_directory/vendor/algolia
                rm -rf algoliasearch-magento-2
                cp -R ~/build_directory/algoliasearch-magento-2 ~/magento_directory/vendor/algolia
                cd ~/magento_directory
                composer dump-autoload

        - run:
            name: Start database server
            command: |
                sudo service mysql start
                sleep 2
                ps aux | grep mysql

        - run:
            name: Install the extension
            command: |
                cd ~/magento_directory
                php -dmemory_limit=-1 bin/magento module:enable Algolia_AlgoliaSearch
                php -dmemory_limit=-1 bin/magento setup:upgrade

        - run:
            name: Get the right tests config for DB and administration
            command: |
                mv ~/build_directory/algoliasearch-magento-2/dev/tests/install-config-mysql.php ~/magento_directory/dev/tests/integration/etc/install-config-mysql.php

        - run:
              name: Before setup
              command: |
                  wget https://alg.li/algolia-keys && chmod +x algolia-keys

        - run:
            name: Run tests
            command: |
                cd ~/magento_directory/dev/tests/integration
                export CI_BUILD_NUM=$CIRCLE_BUILD_NUM
                export CI_PROJ_USERNAME=$CIRCLE_PROJECT_USERNAME
                export CI_PROJ_REPONAME=$CIRCLE_PROJECT_REPONAME
                eval $(~/build_directory/algoliasearch-magento-2/algolia-keys export)
                php -dmemory_limit=-1 ../../../vendor/bin/phpunit ../../../vendor/algolia/algoliasearch-magento-2/Test

jobs:
    "magento-2.1":
        <<: *shared
        docker:
            - image: algolia/magento2-circleci:2.1.17

    "magento-2.2":
        <<: *shared
        docker:
            - image: algolia/magento2-circleci:2.2.8

    "magento-2.3":
        <<: *shared
        docker:
            - image: algolia/magento2-circleci:2.3.0

    "phpcompatibility":
      docker: # run the steps with Docker with PHP 7.2
      - image: circleci/php:7.2
      steps:
        - checkout
        - run: sudo composer self-update
        - run: composer config http-basic.repo.magento.com ${MAGENTO_AUTH_USERNAME} ${MAGENTO_AUTH_PASSWORD}
        - restore_cache:
            keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
        - run: composer install -n --prefer-dist --ignore-platform-reqs --no-progress
        - save_cache:
            key: composer-v1-{{ checksum "composer.lock" }}
            paths:
            - vendor
        - run:
            name: PHPCS PHPCompatibility
            command: |
              ./vendor/bin/phpcs --config-set installed_paths vendor/phpcompatibility/php-compatibility/PHPCompatibility/
              # vendor/ is large and seems to break phpcs, ls+grep+xargs hack is used to send folders to phpcs
              ls -d */ | grep -vE 'dev|Test|vendor' | xargs ./vendor/bin/phpcs -p --standard=PHPCompatibility --runtime-set testVersion 7.1- --runtime-set ignore_warnings_on_exit true

workflows:
    version: 2
    build:
        jobs:
            - "magento-2.2"
            - "magento-2.3"
            - "phpcompatibility"
