<?php
/** @var $this \Magento\Backend\Block\Template */

/** @var \Algolia\AlgoliaSearch\ViewModel\Adminhtml\Common $viewModel */
$viewModel = $this->getViewModel();

$ajaxCheckUrl = $this->getUrl('algolia_algoliasearch/landingpage/checkUrl');
$ajaxCheckQuery = $this->getUrl('algolia_algoliasearch/query/checkQuery');

$applicationId = $viewModel->getApplicationId();
?>
<script>
var applicationId = <?php echo json_encode($applicationId); ?>;
var ajaxCheckUrl = <?php echo json_encode($ajaxCheckUrl); ?>;
var ajaxCheckQuery = <?php echo json_encode($ajaxCheckQuery); ?>;
document.addEventListener("DOMContentLoaded", function(event) {
	requirejs([
		'jquery',
		'Magento_Ui/js/lib/validation/validator',
		'mage/translate',
    'prototype'
	], function ($, validator, mage) {
		'use strict';

      $(".close-box").click(function() {
        $(this).parent().hide();
      });

      validator.addRule(
        'validate-query-usage',
        function (value) {
          var isValid = true;
          var storeId = $('select[name="store_id"]').val();
          var queryId = $('input[name="query_id"]').val();

          var url = ajaxCheckQuery;

          // Only check if the focus is not on the search
          if ($(':focus').attr('name') != 'query_text') {
            new Ajax.Request(
              url,
              {
                parameters: {'store_id': storeId, 'query_text': value, 'query_id': queryId},
                method: 'post',
                asynchronous: false,
                onComplete: function (transport) {
                  var response = JSON.parse(transport.responseText);
                  isValid = response.isValid;
                }
              }
            );
          }

          return isValid;
        },
        $.mage.__('This query is already connected to another query rule. Please enter a different query or edit the existing one.')
      );

      validator.addRule(
        'validate-algolia-index',
        function (value) {

          if (typeof window.algoliaSearchConfig.indexDataByStoreIds[value]== "undefined") {
            return false;
          }

          return true;
        },
        $.mage.__('The index corresponding to the store you selected doesn\'t exist.')
      );

        validator.addRule(
            'validate-url-unicity',
            function (value) {
                var isValid = false;
                var storeId = $('select[name="store_id"]').val();
                var landingPageId = $('input[name="landing_page_id"]').val();
                var url = ajaxCheckUrl;

                new Ajax.Request(
                    url,
                    {
                        parameters: {'store_id': storeId, 'url_key': value, 'landing_page_id': landingPageId},
                        method: 'post',
                        asynchronous: false,
                        onComplete: function (transport) {
                            var response = JSON.parse(transport.responseText);
                            isValid = response.isValid;
                        }
                    }
                );
                return isValid;
            },
            $.mage.__('This URL key is already in use. Please find another one.')
        );
	});
});
</script>
