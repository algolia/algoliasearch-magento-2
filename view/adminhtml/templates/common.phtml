<?php

/** @var $this \Algolia\AlgoliaSearch\Block\Adminhtml\BaseAdminTemplate */

/** @var \Algolia\AlgoliaSearch\ViewModel\Adminhtml\Common $viewModel */
$viewModel = $this->getViewModel();

$isClickAnalyticsEnabled = true;
$isQueryRulesEnabled = true;

$section = $this->getRequest()->getParam('section');

if ($section === 'algoliasearch_cc_analytics') {
    $isClickAnalyticsEnabled = $viewModel->isClickAnalyticsEnabled();
}

if ($section === 'algoliasearch_instant') {
    $isQueryRulesEnabled = $viewModel->isQueryRulesEnabled();
}

?>

<script>
var isClickAnalyticsEnabled = <?php echo json_encode($isClickAnalyticsEnabled); ?>;
var isQueryRulesEnabled = <?php echo json_encode($isQueryRulesEnabled); ?>;

document.addEventListener("DOMContentLoaded", function(event) {
    requirejs(['algoliaAdminBundle'], function(algoliaAdminBundle) {
        algoliaAdminBundle.$(function ($) {
            $('form[action*="algoliasearch"] .accordion .config .label').css('width', 'auto');
            $('form[action*="algoliasearch"] .accordion .config .value').css('width', 'auto');

            var fixHelper = function(e, ui) {
                ui.children().each(function() {
                    $(this).width($(this).width());
                });

                return ui;
            };

            setTimeout(function () {
            	$('form[action*="algoliasearch"] .admin__control-table tbody').sortable({
                    containment: "parent",
                    items: 'tr',
                    tolerance: 'pointer',
                    helper: fixHelper,
                    start: function (event, ui) {
                        $(ui.item).css('margin-left', '10px');
                    }
                });

                $('form[action*="algoliasearch"] .admin__control-table tbody tr td').css('cursor', 'move');
            }, 1000);

	        /** FEATURE ENABLEMENT **/
	        var notEnabledText = `
                <div class="algolia_white_block icon-sadface">
                    Unfortunately, you are not eligible to use this Algolia feature.
                    Please consider <a href="https://www.algolia.com/billing/overview" target="_blank">upgrading to a higher plan</a>.
                </div>
            `;

            // Click analytics
            if (isClickAnalyticsEnabled === false) {
            	$('#algoliasearch_cc_analytics_cc_analytics_group table').hide();
            	$('#algoliasearch_cc_analytics_cc_analytics_group .comment').after(notEnabledText);
            }

            // Query rules in facets
            if (isQueryRulesEnabled === false) {
            	$('select[name*=create_rule]').val('2').prop('disabled', 'disabled');
            	$('#row_algoliasearch_instant_instant_facets .algolia_blue_block').after(notEnabledText);
            }

            // QUEUE INFO

            var url = window.location.href;
            if (url.indexOf('section/algoliasearch_') !== -1) {
            	var position = url.indexOf('/admin/system_config/edit/section'),
                    baseUrl = url.substring(0, position);

                $.getJSON(baseUrl + '/algolia_algoliasearch/queue/info/', function(queueInfo) {
                	var message = `
                        <div class="algolia_white_block icon-warning">
                            <b><a href="https://community.algolia.com/magento/doc/m2/indexing-queue/?utm_source=magento&utm_medium=extension&utm_campaign=magento_2&utm_term=shop-owner&utm_content=doc-link" target="_blank">Indexing Queue</a> is not enabled</b><br>
                            It is highly recommended that you enable it, especially if you are on a production environment.
                            (here, an empty search on a category). For each category you merchandize, new query rule will be created.
                            <br><br>
                            Find out more about Indexing Queue in <a href="https://community.algolia.com/magento/doc/m2/indexing-queue/?utm_source=magento&utm_medium=extension&utm_campaign=magento_2&utm_term=shop-owner&utm_content=doc-link" target="_blank">documentation</a>.
                        </div>`;

                    if (queueInfo.isEnabled === true) {
                        message = `
                            <div class="algolia_white_block icon-bulb">
                                <b><a href="https://community.algolia.com/magento/doc/m2/indexing-queue/?utm_source=magento&utm_medium=extension&utm_campaign=magento_2&utm_term=shop-owner&utm_content=doc-link" target="_blank">Indexing queue</a> information</b><br>
                                Number of queued jobs: <strong>` + queueInfo.currentSize + `</strong>,
                                all queued jobs will be processed in appr. <strong>` + queueInfo.eta + `</strong>
                                <small style="color: #2f2f2f; font-size: .8em;">(assuming your queue runner runs every 5 minutes)</small>.
                                If you want to clear the queue, hit the button: <button class="algolia_clear_queue">Clear the queue</button>                                <br>
                                <br>
                                Find out more about Indexing Queue in <a href="https://community.algolia.com/magento/doc/m2/indexing-queue/?utm_source=magento&utm_medium=extension&utm_campaign=magento_2&utm_term=shop-owner&utm_content=doc-link" target="_blank">documentation</a>.
                            </div>`;
                    }

                    $('.entry-edit').before(message);
                });

	            $(document).on('click', '.algolia_clear_queue', function(e) {
		            e.preventDefault();

		            if (!confirm('Are you sure you want to clear the queue? This operation cannot be reverted.')) {
			            return false;
		            }

		            $(this).replaceWith('<span class="algolia_clearing" style="font-weight: bold;">Clearing the queue <span id="wait"></span></span>');
		            var dots = window.setInterval( function() {
			            var $wait = $('#wait'),
				            waitText = $wait.text();

			            if (waitText.length > 2) {
				            $wait.text('');
			            }
			            else {
				            $wait.text(waitText + '.');
			            }
		            }, 200);

		            $.getJSON(baseUrl + '/algolia_algoliasearch/queue/clear/', function(payload) {
			            window.clearInterval(dots);

			            if (payload.status === 'ok') {
				            $('.algolia_clearing').replaceWith('<span class="algolia_cleared" style="font-weight: bold; color: darkgreen;">The queue has been cleared</span>');
			            }
			            else {
				            $('.algolia_clearing').replaceWith('<span class="algolia_clear_errored" style="font-weight: bold; color: darkred;">There was an error during clearing the queue - <i>'+payload.message+'</i></span>');
			            }
		            });

		            return false;
	            });
            }


            // SYNONYMS

            handleSynonyms($('#algoliasearch_synonyms_synonyms_group_enable_synonyms').val());

            $(document).on('change', '#algoliasearch_synonyms_synonyms_group_enable_synonyms', function() {
            	handleSynonyms($(this).val());
            });

	        function handleSynonyms(enabled) {
		        var $rows = $('#row_algoliasearch_synonyms_synonyms_group_synonyms, #row_algoliasearch_synonyms_synonyms_group_oneway_synonyms, #row_algoliasearch_synonyms_synonyms_group_synonyms_file');

		        if (enabled === '1') {
			        $rows.show();
		        } else {
			        $rows.hide();
		        }
	        }

	        // ORDERED / UNORDERED
	        var $attributesRows = $('#algoliasearch_products_products_product_additional_attributes, #algoliasearch_categories_categories_category_additional_attributes');
	        initAttributes($attributesRows);

	        $attributesRows.on('click', 'button[id^="addToEndBtn"]', function (e) {
		        initAttributes($attributesRows);
	        });

	        $attributesRows.on('change', 'select[name$="[searchable]"]', function (e) {
		        handleAttributes($(this));
	        });

	        function initAttributes($attributesRows) {
		        $attributesRows.find('select[name$="[searchable]"]').each(function(e) {
			        handleAttributes($(this));
		        });
	        }

	        function handleAttributes($selectBox) {
		        var selectValue = $selectBox.val(),
			        $input = $selectBox.parent('td').next().find('select[name$="[order]"]');

		        if(selectValue !== '1') {
			        $input.hide();
		        }
		        else {
			        $input.show();
		        }
	        }
        });
    });
});
</script>
